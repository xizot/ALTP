<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbSounds.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>